{"version":3,"file":"features-AuthByUsername-ui-LoginForm-LoginForm-stories.js","mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE9BA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACnBA;AACA;AACA;;;;;;;;;;;;;;;;;;ACDA;AAEA;AAAA;AAQA;AACA;AAEA;AAGA;AAEA;AACA;AAAA;AACA;AAGA;AAbA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA","sources":["webpack://studyproject/","webpack://studyproject/./src/app/providers/StoreProvider/config/StateSchema.ts","webpack://studyproject/./src/app/providers/StoreProvider/config/store.ts","webpack://studyproject/./src/app/providers/StoreProvider/index.ts","webpack://studyproject/./src/app/providers/StoreProvider/ui/StoreProvider.tsx","webpack://studyproject/./src/shared/config/storybook/StoreDecorator/StoreDecorator.tsx"],"sourcesContent":[null,"import { CounterSchema } from 'entities/Counter';\nimport { UserSchema } from 'entities/User';\nimport { LoginSchema } from 'features/AuthByUsername';\n\nexport interface StateSchema {\n    counter: CounterSchema;\n    user: UserSchema;\n    loginForm: LoginSchema;\n}\n","import { ReducersMapObject, configureStore } from '@reduxjs/toolkit';\n\nimport { loginReducer } from 'features/AuthByUsername';\nimport { counterReducer } from 'entities/Counter';\nimport { userReducer } from 'entities/User';\nimport { StateSchema } from './StateSchema';\n\nexport function createReduxStore(initialState?: StateSchema) {\n    const rootReducers: ReducersMapObject<StateSchema> = {\n        counter: counterReducer,\n        user: userReducer,\n        loginForm: loginReducer,\n    };\n\n    return configureStore<StateSchema>({\n        reducer: rootReducers,\n        devTools: __IS_DEV__,\n        preloadedState: initialState,\n    });\n}\n","import { StoreProvider } from './ui/StoreProvider';\nimport { createReduxStore } from './config/store';\nimport { StateSchema } from './config/StateSchema';\n\nexport {\n    StoreProvider,\n    createReduxStore,\n    StateSchema,\n};\n","import { ReactNode } from 'react';\nimport { Provider } from 'react-redux';\nimport { DeepPartial } from '@reduxjs/toolkit';\nimport { createReduxStore } from '../config/store';\nimport { StateSchema } from '../config/StateSchema';\n\ninterface StoreProviderProps {\n    children?: ReactNode;\n    initialState?: DeepPartial<StateSchema>;\n}\n\nexport const StoreProvider = (props: StoreProviderProps) => {\n    const {\n        children,\n        initialState,\n    } = props;\n\n    const store = createReduxStore(initialState as StateSchema);\n\n    return (\n        <Provider store={store}>\n            {children}\n        </Provider>\n    );\n};\n","import { DeepPartial } from '@reduxjs/toolkit';\nimport { StoryFn } from '@storybook/react';\n\nimport { StateSchema, StoreProvider } from 'app/providers/StoreProvider';\n\nexport const StoreDecorator = (state: DeepPartial<StateSchema>) => (Story: StoryFn) => (\n    <StoreProvider initialState={state}>\n        <Story />\n    </StoreProvider>\n);\n"],"names":[],"sourceRoot":""}